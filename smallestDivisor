class Solution:
    def smallestDivisor(self, nums: List[int], threshold: int) -> int:
        #binary search on solution space between bounds 1 and max(nums)
            #check function - iterates through the list  , divides each element by divisor calling                      ceil, add to sum variable , if sum breaks threshold break from function and continue                    with next iteration
                
        def check(d):
            sum=0
            for num in nums:
                sum+=math.ceil(num / d)
                if sum > threshold:
                    return False
            return True
        left=1
        right=max(nums)
        
        while left <= right:
            mid = (left+right)//2
            if  check(mid):
                right = mid -1
            else:
                left = mid+1
        return left
            